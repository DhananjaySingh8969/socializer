class chatEngine{constructor(e,s){this.user=e,this.msger=s,this.socket=io.connect("http://18.224.19.194/:5000"),this.user.email&&this.connectionHandler()}connectionHandler(){let e=this;this.socket.on("connect",(function(){$(e.msger.form).submit((function(s){s.preventDefault();const n=$(e.msger.input).val();n&&(e.socket.emit("send_messege",{chatroom:"socializer",user:e.user,msg:n}),e.appendMessage(user.name,user.avatar,"right",n),$(e.msger.input).val(""),e.socket.on("received_messege",(function(s){console.log(s),s.user.email==e.user.email&&(e.appendMessage(s.user.name,s.user.avatar,"left",s.msg),console.log(s))})))}))}))}appendMessage(e,s,n,t){const i=`\n              <div class="msg ${n}-msg word-break">\n                <div class="msg-img" style="background-image: url(${s})"></div>\n          \n                <div class="msg-bubble">\n                  <div class="msg-info">\n                    <div class="msg-info-name">${e}</div>\n                    <div class="msg-info-time">${this.formatDate(new Date)}</div>\n                  </div>\n          \n                  <div class="msg-text word-break">${t}</div>\n                </div>\n              </div>\n            `;$(msger.chat).append(i),$(msger.chat).animate({scrollTop:$(msger.chat).prop("scrollHeight")},1e3)}formatDate(e){const s="0"+e.getHours(),n="0"+e.getMinutes();return`${s.slice(-2)}:${n.slice(-2)}`}}